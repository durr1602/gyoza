import sys

##### Load main report caption #####


report: "report/workflow.rst"


##### Load rules #####


include: "rules/common.smk"

include: "rules/vsearch.smk"
include: "rules/stats.smk"
include: "rules/pool_stats.smk"
include: "rules/parse_fasta.smk"
include: "rules/plot_read_counts.smk"


RF_VALS = ["R1"]
if config["reads"]["paired"]:
    RF_VALS.append("R2")
    include: "rules/cutadapt.smk"
    include: "rules/pandaseq.smk"
else:
    include: "rules/cutadapt-se.smk"
if config["qc"]["perform"]:
    include: "rules/qc.smk"


design = config["design"]
if design == "random":
    include: "rules/annotate_random.smk"
elif design == "provided":
    include: "rules/compare.smk"
    include: "rules/annotate_mutants.smk"
elif design == "codon":
    include: "rules/generate_expected_mutants.smk"
    include: "rules/compare.smk"
    include: "rules/annotate_mutants.smk"
else:
    raise ValueError(f"Unknown experiment design: {design}")


if config["process_read_counts"]:
    include: "rules/process_read_counts.smk"
    include: "rules/plot_final_heatmaps.smk"

##### Target(s) #####


rule all:
    input:
        get_target(),


##### Generate dynamic report upon completion of the workflow #####

onsuccess:
    generate_report()
onerror:
    generate_report()